# Integrantes: Carlos.H, Joel.G, Oriol.G, Bryan.F

# Función para cargar datos de clientes desde el archivo
def CargarDatosClientes():
    diccionario = {}
    try:
        with open('diccionario.txt', 'r') as archivo:
            for linea in archivo:
                clave, valor = linea.strip().split(":", 1)
                diccionario[clave] = valor
    except FileNotFoundError:
        print("Archivo de clientes no encontrado.")
    return diccionario

# Función para cargar datos de productos desde el archivo
def CargarDatosProductos():
    diccionario2 = {}
    try:
        with open('diccionario2.txt', 'r') as archivo:
            for linea in archivo:
                clave, valor = linea.strip().split(":", 1)
                diccionario2[clave] = valor
    except FileNotFoundError:
        print("Archivo de productos no encontrado.")
        diccionario2 = False
        return diccionario2
    return diccionario2

# Función para cargar relaciones de clientes y productos
def CargarRelaciones():
    relaciones = {}
    try:
        with open('relaciones.txt', 'r') as archivo:
            for linea in archivo:
                cliente, producto, precio = linea.strip().split(";")
                if cliente not in relaciones:
                    relaciones[cliente] = {}
                relaciones[cliente][producto] = float(precio)
    except FileNotFoundError:
        print("Archivo de relaciones no encontrado.")
        relaciones = False
        return relaciones
    return relaciones

# Función para mostrar los clientes
def MostrarClientes(diccionario):
    print("Clientes:")
    for clave, valor in diccionario.items():
        print("NIF: " + str(clave) + ", Nombre: " + str(valor))

# Función para mostrar los productos
def MostrarProductos(diccionario2):
    print("Productos:")
    for clave, valor in diccionario2.items():
        print("Código: " + str(clave) + ", Nombre: " + str(valor))

# Función para asignar producto a cliente
def AsignarProductoACliente(relaciones, diccionario, diccionario2, cliente, producto, precio):
    if cliente not in diccionario:
        print("El cliente no existe.")
        return
    if producto not in diccionario2:
        print("El producto no existe.")
        return
    if cliente in relaciones and producto in relaciones[cliente]:
        print("La relación ya existe.")
        return
    if cliente not in relaciones:
        relaciones[cliente] = {}
    relaciones[cliente][producto] = float(precio)
    with open('relaciones.txt', 'a') as archivo:
        archivo.write(cliente + ";" + producto + ";" + str(precio) + "\n")
    print("Relación guardada correctamente.")

# Función para borrar producto de cliente
def BorrarProductoDeCliente(relaciones, cliente, producto):
    if cliente not in relaciones or producto not in relaciones[cliente]:
        print("La relación no existe.")
        return
    del relaciones[cliente][producto]
    if not relaciones[cliente]:
        del relaciones[cliente]
    with open('relaciones.txt', 'w') as archivo:
        for cli, productos in relaciones.items():
            for prod, precio in productos.items():
                archivo.write(cli + ";" + prod + ";" + str(precio) + "\n")
    print("Relación eliminada correctamente.")

# Función para modificar el precio de un producto de cliente
def ModificarPrecioProductoCliente(relaciones, cliente, producto, NuevoPrecio):
    if cliente not in relaciones or producto not in relaciones[cliente]:
        print("La relación no existe.")
        return
    relaciones[cliente][producto] = float(NuevoPrecio)
    with open('relaciones.txt', 'w') as archivo:
        for cli, productos in relaciones.items():
            for prod, precio in productos.items():
                archivo.write(cli + ";" + prod + ";" + str(precio) + "\n")
    print("Precio modificado correctamente.")

# Función para mostrar los productos asignados a un cliente
def MostrarProductosCliente(relaciones, diccionario2, cliente):
    if cliente not in relaciones:
        print("El cliente no existe o no tiene productos asignados.")
        return
    print("Productos del cliente:")
    for producto, precio in relaciones[cliente].items():
        NombreProducto = diccionario2.get(producto, "Desconocido")
        print("Código: " + str(producto) + ", Nombre: " + str(NombreProducto) + ", Precio: " + str(precio))

# Función para verificar el DNI del cliente
def VerificarDNI(diccionario):
    intentos = 0
    while intentos < 3:
        dni = input("Por favor, introduce tu DNI: ")
        dni = dni.strip()
        if dni in diccionario:
            print("DNI ",dni," verificado con éxito.")
            return dni
        else:
            print("DNI incorrecto.")
            intentos += 1
    print("Demasiados intentos fallidos. Saliendo del programa.")
    return None

# Menú principal
def Menu():
    print("Opciones:")
    print("0- Salir del programa")
    print("1- Mostrar clientes existentes")
    print("2- Mostrar productos existentes")
    print("3- Asignar producto a cliente")
    print("4- Borrar producto a cliente")
    print("5- Modificar precio de producto para cliente")
    print("6- Mostrar productos de un cliente")
    try:
        opcion = int(input('Opción: '))  # Leer la opción del usuario
        return opcion
    except:
        print("Ingrese una opción valida")

# Función para iniciar el programa
def Inicio():
    diccionario = CargarDatosClientes()
    diccionario2 = CargarDatosProductos()
    relaciones = CargarRelaciones()

    if diccionario == False:
        return
    elif diccionario2 == False:
        return
    elif relaciones == False:
        return

    # Verificar el DNI antes de continuar
    cliente = VerificarDNI(diccionario)
    if cliente is None:
        return

    Iniciar = True
    while Iniciar:
        opcion = Menu()
        if opcion == 0:
            print("Saliendo del programa.")
            Iniciar = False
        elif opcion == 1:
            MostrarClientes(diccionario)
        elif opcion == 2:
            MostrarProductos(diccionario2)
        elif opcion == 3:
            cliente = input("Escribe el NIF del cliente: ")
            producto = input("Escribe el código del producto: ")
            precio = input("Escribe el precio del producto para este cliente: ")
            AsignarProductoACliente(relaciones, diccionario, diccionario2, cliente, producto, precio)
        elif opcion == 4:
            cliente = input("Escribe el NIF del cliente: ")
            producto = input("Escribe el código del producto: ")
            BorrarProductoDeCliente(relaciones, cliente, producto)
        elif opcion == 5:
            cliente = input("Escribe el NIF del cliente: ")
            producto = input("Escribe el código del producto: ")
            NuevoPrecio = input("Escribe el nuevo precio del producto para este cliente: ")
            ModificarPrecioProductoCliente(relaciones, cliente, producto, NuevoPrecio)
        elif opcion == 6:
            cliente = input("Escribe el NIF del cliente: ")
            MostrarProductosCliente(relaciones, diccionario2, cliente)
        elif opcion != [0,1,2,3,4,5,6]:
            print('Opcion no valida')

# Llama a la funcion Inicio
Inicio()
